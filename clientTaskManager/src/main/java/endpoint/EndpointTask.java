package endpoint;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-02-06T17:46:07.212+03:00
 * Generated source version: 3.2.7
 *
 */
@WebService(targetNamespace = "http://endpoint/", name = "EndpointTask")
@XmlSeeAlso({ObjectFactory.class})
public interface EndpointTask {

    @WebMethod
    @Action(input = "http://endpoint/EndpointTask/deleteTaskRequest", output = "http://endpoint/EndpointTask/deleteTaskResponse")
    @RequestWrapper(localName = "deleteTask", targetNamespace = "http://endpoint/", className = "endpoint.DeleteTask")
    @ResponseWrapper(localName = "deleteTaskResponse", targetNamespace = "http://endpoint/", className = "endpoint.DeleteTaskResponse")
    public void deleteTask(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebMethod
    @Action(input = "http://endpoint/EndpointTask/createTaskRequest", output = "http://endpoint/EndpointTask/createTaskResponse")
    @RequestWrapper(localName = "createTask", targetNamespace = "http://endpoint/", className = "endpoint.CreateTask")
    @ResponseWrapper(localName = "createTaskResponse", targetNamespace = "http://endpoint/", className = "endpoint.CreateTaskResponse")
    public void createTask(
        @WebParam(name = "arg0", targetNamespace = "")
        endpoint.Task arg0
    );

    @WebMethod
    @Action(input = "http://endpoint/EndpointTask/checkTaskListIsEmptyRequest", output = "http://endpoint/EndpointTask/checkTaskListIsEmptyResponse")
    @RequestWrapper(localName = "checkTaskListIsEmpty", targetNamespace = "http://endpoint/", className = "endpoint.CheckTaskListIsEmpty")
    @ResponseWrapper(localName = "checkTaskListIsEmptyResponse", targetNamespace = "http://endpoint/", className = "endpoint.CheckTaskListIsEmptyResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean checkTaskListIsEmpty();

    @WebMethod
    @Action(input = "http://endpoint/EndpointTask/findAllTaskRequest", output = "http://endpoint/EndpointTask/findAllTaskResponse")
    @RequestWrapper(localName = "findAllTask", targetNamespace = "http://endpoint/", className = "endpoint.FindAllTask")
    @ResponseWrapper(localName = "findAllTaskResponse", targetNamespace = "http://endpoint/", className = "endpoint.FindAllTaskResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<endpoint.Task> findAllTask();

    @WebMethod
    @Action(input = "http://endpoint/EndpointTask/deleteTaskByIdProjecrRequest", output = "http://endpoint/EndpointTask/deleteTaskByIdProjecrResponse")
    @RequestWrapper(localName = "deleteTaskByIdProjecr", targetNamespace = "http://endpoint/", className = "endpoint.DeleteTaskByIdProjecr")
    @ResponseWrapper(localName = "deleteTaskByIdProjecrResponse", targetNamespace = "http://endpoint/", className = "endpoint.DeleteTaskByIdProjecrResponse")
    public void deleteTaskByIdProjecr(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebMethod
    @Action(input = "http://endpoint/EndpointTask/getTaskByProjectNameRequest", output = "http://endpoint/EndpointTask/getTaskByProjectNameResponse")
    @RequestWrapper(localName = "getTaskByProjectName", targetNamespace = "http://endpoint/", className = "endpoint.GetTaskByProjectName")
    @ResponseWrapper(localName = "getTaskByProjectNameResponse", targetNamespace = "http://endpoint/", className = "endpoint.GetTaskByProjectNameResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<endpoint.Task> getTaskByProjectName(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebMethod
    @Action(input = "http://endpoint/EndpointTask/openTaskRequest", output = "http://endpoint/EndpointTask/openTaskResponse")
    @RequestWrapper(localName = "openTask", targetNamespace = "http://endpoint/", className = "endpoint.OpenTask")
    @ResponseWrapper(localName = "openTaskResponse", targetNamespace = "http://endpoint/", className = "endpoint.OpenTaskResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<endpoint.Task> openTask(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );
}
