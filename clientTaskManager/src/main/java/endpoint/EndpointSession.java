package endpoint;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-02-19T10:50:19.053+03:00
 * Generated source version: 3.2.7
 *
 */
@WebService(targetNamespace = "http://endpoint/", name = "EndpointSession")
@XmlSeeAlso({ObjectFactory.class})
public interface EndpointSession {

    @WebMethod
    @Action(input = "http://endpoint/EndpointSession/logOutRequest", output = "http://endpoint/EndpointSession/logOutResponse")
    @RequestWrapper(localName = "logOut", targetNamespace = "http://endpoint/", className = "endpoint.LogOut")
    @ResponseWrapper(localName = "logOutResponse", targetNamespace = "http://endpoint/", className = "endpoint.LogOutResponse")
    public void logOut(
        @WebParam(name = "session", targetNamespace = "")
        endpoint.Session session
    );

    @WebMethod
    @Action(input = "http://endpoint/EndpointSession/getSessionByUserIdRequest", output = "http://endpoint/EndpointSession/getSessionByUserIdResponse")
    @RequestWrapper(localName = "getSessionByUserId", targetNamespace = "http://endpoint/", className = "endpoint.GetSessionByUserId")
    @ResponseWrapper(localName = "getSessionByUserIdResponse", targetNamespace = "http://endpoint/", className = "endpoint.GetSessionByUserIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public endpoint.Session getSessionByUserId(
        @WebParam(name = "userId", targetNamespace = "")
        java.lang.String userId
    );

    @WebMethod
    @Action(input = "http://endpoint/EndpointSession/getNewSessionRequest", output = "http://endpoint/EndpointSession/getNewSessionResponse")
    @RequestWrapper(localName = "getNewSession", targetNamespace = "http://endpoint/", className = "endpoint.GetNewSession")
    @ResponseWrapper(localName = "getNewSessionResponse", targetNamespace = "http://endpoint/", className = "endpoint.GetNewSessionResponse")
    @WebResult(name = "return", targetNamespace = "")
    public endpoint.Session getNewSession(
        @WebParam(name = "userId", targetNamespace = "")
        java.lang.String userId
    );

    @WebMethod
    @Action(input = "http://endpoint/EndpointSession/validateSessionRequest", output = "http://endpoint/EndpointSession/validateSessionResponse", fault = {@FaultAction(className = AccessForbiddenException_Exception.class, value = "http://endpoint/EndpointSession/validateSession/Fault/AccessForbiddenException")})
    @RequestWrapper(localName = "validateSession", targetNamespace = "http://endpoint/", className = "endpoint.ValidateSession")
    @ResponseWrapper(localName = "validateSessionResponse", targetNamespace = "http://endpoint/", className = "endpoint.ValidateSessionResponse")
    public void validateSession(
        @WebParam(name = "session", targetNamespace = "")
        endpoint.Session session
    ) throws AccessForbiddenException_Exception;
}
